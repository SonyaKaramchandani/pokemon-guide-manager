@model Biod.Zebra.Library.Models.EventsInfoViewModel
@using Biod.Zebra.Library.Infrastructures

<style>
    #filter-summary {
        flex-grow: 0;
        flex-basis: 66px;
    }
    
    .fs-section a {
        border: 1px solid #AE9F7E;
        box-sizing: border-box;
        border-radius: 4px;
        padding: 0.25rem 0.5rem;
        color: #AE9F7E;
        font-size: 12px;
        line-height: 15px;
        font-weight: bold;
        cursor: pointer;
        margin-left: 0.5rem;
        text-transform: uppercase;
    }
    
    .fs-section a:hover {
        background-color: rgba(174, 159, 126, 0.1);
    }
    
    /* Kendo widget styling */
    .fs-section .k-widget {
        width: auto;
    }
    
    .fs-section .k-dropdown-wrap .k-input {
        height: auto;
        padding: 0;
        font-size: 14px;
        line-height: 18px;
        font-weight: 600;
        text-decoration: underline;
    }
    
    .fs-section .k-dropdown-wrap .k-select {
        padding: 0;
    }
    
    .fs-section .k-dropdown-wrap {
        background: none;
        width: auto;
        border: 0;
        color: #AE9F7E;
    }

    .fs-section .k-dropdown-wrap .k-icon:before {
        content: '\e015';
        font-size: 16px;
        line-height: 16px;
        padding-left: 4px;
    }
    
    /* Kendo generated divs attach -list to name of the field */
    #fs-sort-field-list .k-list .k-item,
    #fs-group-field-list .k-list .k-item {
        font-size: 14px;
        font-weight: 600;
    }
    
    #fs-sort-field-list .k-list .k-item:hover,
    #fs-group-field-list .k-list .k-item:hover {
        background-color: #f6f3ec;
    }
    
    #fs-sort-field-list .k-list .k-item.k-state-selected,
    #fs-group-field-list .k-list .k-item.k-state-selected {
        background-color: #c8b997;
        color: #fff;
    }
    
    #fs-sort-field-list .k-list .k-item.k-state-disabled,
    #fs-group-field-list .k-list .k-item.k-state-disabled {
        color: #aaa;
    }
    
    /* Links and Buttons section */
    .fs-summary-link-section {
        background-color: #f6f3ec;
        padding: 1rem 1rem 0;
        text-align: right;
    }
    
    .fs-summary-link-section .fs-collapse-button {
        float: left;
        cursor: pointer;
    }
    
    #gd-sidebar:not(.collapsible) .fs-collapse-button {
        opacity: 0.2;
        cursor: default;
    }
    
    /* Summary Text section */
    .fs-summary-text-section {
        background-color: #f6f3ec;
        color: #aaa;
        font-size: 14px;
        line-height: 18px;
        font-weight: 600;
        padding: 1rem;
    }
    
    .fs-summary-text {
        display: block;
    }
    
    .fs-summary-location {
        color: #000;
        font-weight: bold;
    }
    
    /* Group/Sort section */
    .fs-group-sort-section {
        border-top: 2px solid #AE9F7E;
        border-bottom: 1px solid #AE9F7E;
        width: 100%;
        height: 66px;
        -webkit-box-sizing: border-box;
        -moz-box-sizing: border-box;
        box-sizing: border-box;
    }
    
    .fs-group-sort-section > div {
        width: 50%;
        height: 100%;
        padding: 12px 1rem;
        -webkit-box-sizing: border-box;
        -moz-box-sizing: border-box;
        box-sizing: border-box;
        display: inline-block;
        overflow: hidden;
    }
    
    .fs-group-sort-section > div:first-child {
        border-right: 1px solid rgba(174, 159, 126, 0.25);
    }
    
    .fs-group-sort-label {
        font-size: 14px;
        line-height: 18px;
        color: #7A7A7A;
        font-weight: 600;
        display: block;
    }
</style>

<div id="filter-summary">
    <div class="fs-section fs-summary-link-section">
        <span class="fs-collapse-button">
            <svg width="13" height="15" viewBox="0 0 13 15" fill="none" xmlns="http://www.w3.org/2000/svg">
                <line x1="0.625" y1="0.625" x2="0.625001" y2="14.375" stroke="#3C3C3C" stroke-width="1.25" stroke-linecap="round" stroke-linejoin="round"/>
                <path d="M6.92857 3.57031L3 7.49888L6.92857 11.4275" stroke="#3C3C3C" stroke-width="1.25" stroke-linecap="round" stroke-linejoin="round"/>
                <line x1="4.33984" y1="7.23047" x2="12.3756" y2="7.23047" stroke="#3C3C3C" stroke-width="1.25" stroke-linecap="round"/>
            </svg>
        </span>
        <a class="fs-all-events-button" href="#" style="display: none">See all events</a>
        <a class="fs-custom-events-button" href="#" style="display: none">See my custom events</a>
        <a class="fs-modify-filter-button" href="#">
            <svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg" style="vertical-align: middle">
                <path d="M8.49952 10V7L12.6885 2.811C12.8368 2.66262 12.9378 2.47361 12.9787 2.26786C13.0196 2.06211 12.9986 1.84885 12.9183 1.65504C12.838 1.46122 12.7021 1.29555 12.5277 1.17896C12.3533 1.06237 12.1483 1.00009 11.9385 1H2.06052C1.85074 1.00009 1.6457 1.06237 1.47131 1.17896C1.29692 1.29555 1.161 1.46122 1.08074 1.65504C1.00047 1.84885 0.979462 2.06211 1.02036 2.26786C1.06126 2.47361 1.16223 2.66262 1.31052 2.811L5.49952 7V13L8.49952 10Z" stroke="#AE9F7E" stroke-width="1.3" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
            Modify filters
        </a>
    </div>
    <div class="fs-section fs-summary-text-section">
        <div class="fs-summary-text">
            Showing <span class="fs-summary-is-all">all </span><span class="fs-summary-event-count">25</span> <span class="fs-summary-is-custom">custom </span> events and their risk of importation to your locations: <span class="fs-summary-location"></span>
        </div>
    </div>
    <div class="fs-section fs-group-sort-section">
        <div class="fs-group-section">
            <label class="fs-group-sort-label" for="fs-group-field">Group by</label>
            <input class="fs-group-sort-field" id="fs-group-field" name="fs-group-field" />
        </div><!--
     --><div class="fs-sort-section">
            <label class="fs-group-sort-label" for="fs-sort-field">Sort by</label>
            <input class="fs-group-sort-field" id="fs-sort-field" name="fs-sort-field"/>
        </div>
    </div>
</div>

<script id="fs-dropdownlist-item-template" type="text/x-kendo-template">
    <span class="#: enabled ? '' : 'k-state-disabled'#">
        #: DisplayName #
    </span>
</script>

<script>
    (function () {
        var $collapseButton = $('.fs-collapse-button');
        var $customEventsButton = $('.fs-custom-events-button');
        var $allEventsButton = $('.fs-all-events-button');
        var $modifyFilterButton = $('.fs-modify-filter-button');
        
        var $groupByField = $('#fs-group-field');
        var $sortByField = $('#fs-sort-field');
        var $ddlItemTemplate = $('#fs-dropdownlist-item-template');
        
        var $summaryText = $('.fs-summary-text');
        
        window.FilterSummaryMethods = {
            getGroupSortParams: function() {
                return {
                    groupBy: $groupByField.data('kendoDropDownList').value(),
                    sortBy: $sortByField.data('kendoDropDownList').value()
                }
            },
            resetGroupSortParams: function() {
                $groupByField.data('kendoDropDownList').select(0);
                $sortByField.data('kendoDropDownList').select(0);
            },
            setIsCustomEvents: function(isCustom) {
                $customEventsButton.css('display', isCustom ? 'none' : 'inline-block');
                $allEventsButton.css('display', !isCustom ? 'none' : 'inline-block');
            },
            getEventCasePartialView: function() {
                var df = $.Deferred();
                var sortDDL = $sortByField.data('kendoDropDownList');
                var groupDDL = $groupByField.data('kendoDropDownList');
                var summaryParams = window.FilterSummaryMethods.getGroupSortParams();
                
                var toCtrlParams = JSON.parse(JSON.stringify(filterParams));
                toCtrlParams["groupType"] = summaryParams.groupBy;
                toCtrlParams["sortType"] = summaryParams.sortBy;
        
                var hasAOI = (window.filterParams.geonameIds || window.filterParams.customEvents) && true;
        
                $.ajax({
                    url: '@Url.Action("GetEventCasePartialView", "Dashboard")',
                    //dataType: "json",
                    type: "POST",
                    data: toCtrlParams,
                    error: function (error) {
                        df.reject(error);
                    },
                    success: function (data) {
                        $("#gd-cases-container").html(data);
                        df.resolve(data);
        
                        var options = sortDDL.options.dataSource;
                        options = options.map(function (o) {
                            o['enabled'] = hasAOI || o.Id !== 7; // Risk of Importation
                            return o;
                        });
                        sortDDL.setDataSource(options);
                        
                        var groupByOptions = groupDDL.options.dataSource;
                        groupByOptions = groupByOptions.map(function (o) {
                            o['enabled'] = hasAOI || o.Id !== 8; // Group By Disease
                            return o;
                        });
                        groupDDL.setDataSource(groupByOptions);
                    }
                });
        
                return df;
            },
            updateSummaryText: function() {
                if (!window.filterParams) {
                    window.filterParams = window.FilterPanelMethods.getFilterParams();
                }
              
                var locationNames = window.filterParams.geonames.map(function(g) {
                    return g.LocationDisplayName;
                }).join('; ');
                var resultCount = window.FilterEventResults && window.FilterEventResults.resultCount || 0;
                var totalCount = window.FilterEventResults && window.FilterEventResults.totalCount || 0;
                var isLocationOnly = window.filterParams.locationOnly;
                var hasAoi = window.filterParams.geonameIds;
                
                var summaryText;
                if (window.filterParams.customEvents) {
                    // Custom Events
                    summaryText = 'Showing ' + resultCount + ' custom events (of ' + totalCount + ' active global events) ';
                    summaryText += isLocationOnly ? 'that are a ' : 'and their ';
                    summaryText += 'risk to your locations: <span class="fs-summary-location">' + locationNames + '</span>';
                } else {
                    summaryText = resultCount >= totalCount ? 'Showing all ' + resultCount + ' active global events' : 'Showing ' + resultCount + ' events (of ' + totalCount + ' active global events)';
                    summaryText += hasAoi ? 
                        (isLocationOnly ? ' that are a risk to your locations: ' : ' and their risk of importation to: ') + '<span class="fs-summary-location">' + locationNames + '</span>'
                        :
                        '.';
                }
                
                $summaryText.html(summaryText);
                $sortByField.data('kendoDropDownList').select((dataItem) => { return dataItem.Id === window.FilterEventResults.sortBy; });
                $groupByField.data('kendoDropDownList').select((dataItem) => { return dataItem.Id === window.FilterEventResults.groupBy; });
            }
        };

        var groupOptions = @Html.Raw(Json.Encode(Model.GroupByFields));
        groupOptions = groupOptions.map(function (o) {
            // Disable Group By Disease if no AOIs
            o['enabled'] = o.Id !== 8 || window.FilterPanelDependencies.defaultFilters.customEvents;
            return o;
        });
        
        $groupByField.kendoDropDownList({
            autoWidth: true,
            dataTextField: "DisplayName",
            dataValueField: "Id",
            dataSource: groupOptions,
            change: function (e) {
                window.gtagh(
                    '@Html.Raw(Constants.GoogleAnalytics.Action.CHANGE_GROUPING)',
                    '@Html.Raw(Constants.GoogleAnalytics.Category.EVENT_LIST)',
                    'Group by ' + this.text());

                window.toggleSidebarLoadingOn();
                window.FilterSummaryMethods.getEventCasePartialView()
                    .then(
                        function (result) {
                            var $result = $($.parseHTML(result));
                            var elemArray = $result.filter('#gd-cases').find(".gd-case");
                            window.onEventCasePartialLoaded(elemArray.length ? elemArray : $result.filter('.eventlist').find("article.eventlistitem"));
                        })
                    .always(
                        function () {
                            window.toggleSidebarLoadingOff();
                        });
            },
            select: function (e) {
                if (!e.dataItem.enabled) {
                    e.preventDefault();
                } else {
                    window.biod.utils.docCookies.setItem("biod.groupBy", e.dataItem.Id, Infinity);
                }
            },
            template: kendo.template($ddlItemTemplate.html()),
            autoBind: true,
            dataBound: function () {
                // Apply disabled style on disabled items
                $('#fs-group-field-list li.k-item').removeClass('k-state-disabled');
                $('#fs-group-field-list span.k-state-disabled').parent().addClass('k-state-disabled');
            }
        });

        var sortOptions = @Html.Raw(Json.Encode(Model.OrderByFields));
        sortOptions = sortOptions.map(function (o) {
            // Disable Risk of Importation by default
            o['enabled'] = o.Id !== 7 || window.FilterPanelDependencies.defaultFilters.customEvents;
            return o;
        });

        $sortByField.kendoDropDownList({
            autoWidth: true,
            dataTextField: "DisplayName",
            dataValueField: "ColumnName",
            dataSource: sortOptions,
            change: function (e) {
                window.gtagh(
                    '@Html.Raw(Constants.GoogleAnalytics.Action.CHANGE_SORTING)',
                    '@Html.Raw(Constants.GoogleAnalytics.Category.EVENT_LIST)',
                    'Sort by ' + this.text());

                window.toggleSidebarLoadingOn();
                window.FilterSummaryMethods.getEventCasePartialView()
                    .then(
                        function (result) {
                            var $result = $($.parseHTML(result));
                            var elemArray = $result.filter('#gd-cases').find(".gd-case");
                            window.onEventCasePartialLoaded(elemArray.length ? elemArray : $result.filter('.eventlist').find("article.eventlistitem"));
                        })
                    .always(
                        function () {
                            window.toggleSidebarLoadingOff();
                        });
            },
            select: function (e) {
                if (!e.dataItem.enabled) {
                    e.preventDefault();
                } else {
                    window.biod.utils.docCookies.setItem("biod.sortBy", e.dataItem.Id, Infinity);
                }
            },
            template: kendo.template($ddlItemTemplate.html()),
            autoBind: true,
            dataBound: function () {
                // Apply disabled style on disabled items
                $('#fs-sort-field-list li.k-item').removeClass('k-state-disabled');
                $('#fs-sort-field-list span.k-state-disabled').parent().addClass('k-state-disabled');
            }
        });
        
        $allEventsButton.on('click', function(e) {
            var currentFilters = window.FilterPanelMethods.getFilterParams();
            window.FilterPanelMethods.setCustomEventsCheckbox(false);
            window.FilterPanelMethods.setLocationOnlyCheckbox(false);
            if (!window.FilterPanelDependencies.applyFilters()) {
                // Filters not applied, undo settings
                window.FilterPanelMethods.setCustomEventsCheckbox(currentFilters.customEvents);
                window.FilterPanelMethods.setLocationOnlyCheckbox(currentFilters.locationOnly);
            }
            
            if (e.originalEvent) {
                window.gtagh(
                    '@Html.Raw(Constants.GoogleAnalytics.Action.CLICK_SEE_ALL_EVENTS)', 
                    '@Html.Raw(Constants.GoogleAnalytics.Category.EVENT_LIST)',
                    'Switch to "Global view" from Event List panel');
            }
            return false;
        });
        $customEventsButton.on('click', function(e) {
            var currentFilters = window.FilterPanelMethods.getFilterParams();
            window.FilterPanelMethods.setCustomEventsCheckbox(true);
            window.FilterPanelMethods.setLocationOnlyCheckbox(false);
            window.FilterPanelDependencies.applyFilters();
            if (!window.FilterPanelDependencies.applyFilters()) {
                // Filters not applied, undo settings
                window.FilterPanelMethods.setCustomEventsCheckbox(currentFilters.customEvents);
                window.FilterPanelMethods.setLocationOnlyCheckbox(currentFilters.locationOnly);
            }
            
            if (e.originalEvent) {
                window.gtagh(
                    '@Html.Raw(Constants.GoogleAnalytics.Action.CLICK_SEE_CUSTOM_EVENTS)', 
                    '@Html.Raw(Constants.GoogleAnalytics.Category.EVENT_LIST)',
                    'Switch to "Custom view" from Event List panel');
            }
            return false;
        });
        $modifyFilterButton.on('click', function (e) {
            window.biod.dashboard.panel.openFilterPanel();
            if ($(e.currentTarget).attr('nofilters')) {
                window.gtagh(
                    '@Html.Raw(Constants.GoogleAnalytics.Action.CLICK_ADD_FILTERS)',
                    '@Html.Raw(Constants.GoogleAnalytics.Category.FILTERS)',
                    'Add filters from top right of list panel');
            } else {
                window.gtagh(
                    '@Html.Raw(Constants.GoogleAnalytics.Action.CLICK_MODIFY_FILTERS)',
                    '@Html.Raw(Constants.GoogleAnalytics.Category.FILTERS)',
                    'Modify filters from top right of list panel');
            }
            return false;
        });
        
        $collapseButton.on('click', function(e) {
            window.biod.dashboard.panel.collapseEventsListPanel();
        });
    })();
</script>
