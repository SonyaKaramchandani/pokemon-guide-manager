<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>Intro to MapView - Create a 2D map</title>
    <style>
        /*html,
        body,*/
        #map-view-div {
            padding: 0;
            margin: 0;
            height: 100%;
            width: 100%;
        }
    </style>

    <link rel="stylesheet" href="https://js.arcgis.com/4.11/esri/css/main.css">
    <script>
        var dojoConfig = {
            has: {
                "esri-featurelayer-webgl": 1
            }
        }
    </script>
    @*cannot show label over client-side point in 4.8*@
    @*can show label over client-side point in 4.11*@
    <script src="https://js.arcgis.com/4.11/"></script>

    <script>
        require([
            "esri/views/MapView",
            "esri/Map",
            "esri/layers/FeatureLayer",
            "esri/geometry/Point",
            "esri/request",
            "dojo/domReady!"
        ], function (MapView, Map, FeatureLayer, Point, esriRequest) {
            //=====Run at initialization START=====
            var map = new Map({
                basemap: "gray-vector"
            });
            var view = new MapView({
                container: "map-view-div",  // Reference to the scene div created in step 5
                map: map,  // Reference to the map object created before the scene
                zoom: 2,  // Sets zoom level based on level of detail (LOD)
                center: [-30, 30]  // Sets center point of view using longitude,latitude
            });

            view.when(function () {
                // Request the earthquake data from USGS when the view resolves
                //getData()
                //    .then(createGraphics) // then send it to the createGraphics() method
                //    .then(createLayer) // when graphics are created, create the layer
                //    .then(createLegend) // when layer is created, create the legend
                //    .catch(errback);
                var pData = getData();
                var pGraphic = createGraphics(pData);
                var lyr1 = createLayer(pGraphic);
                map.add(lyr1);
            });
            //=====Run at initialization END=====

            //=====Add point feature layer START=====
            function getData() {
                //var url = "data/week.geojson";

                //return esriRequest(url, {
                //    responseType: "json"
                //});
                var srcData = {
                    "type": "FeatureCollection",
                    //"metadata": {
                    //    "generated": 1459785466000,
                    //    "url": "http://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_week.geojson",
                    //    "title": "USGS All Earthquakes, Past Week",
                    //    "status": 200,
                    //    "api": "1.5.0",
                    //    "count": 1641
                    //},
                    "features": [
                        {
                            "type": "Feature",
                            "geometry": {
                                "type":
                                    "Point",
                                "coordinates": [-122.8248367, 38.8255005, 0.35]
                            },
                            "id": "nc72617610",
                            "title": "Title A"
                        },
                        {
                            "type": "Feature",
                            "geometry": {
                                "type": "Point",
                                "coordinates": [-117.7281667, 34.2071667, 27.38]
                            },
                            "id": "ci37326887",
                            "title": "Title B"
                        },
                        {
                            "type": "Feature",
                            "geometry": {
                                "type": "Point",
                                "coordinates": [-118.3713, 38.4752, 5.9]
                            },
                            "id": "nn00539077",
                            "title": "Title C"
                        }
                    ]
                }
                return srcData;
            }

            function createGraphics(response) {
                // raw GeoJSON data
                var geoJson = response;//.data;

                // Create an array of Graphics from each GeoJSON feature
                return geoJson.features.map(function (feature, i) {
                    return {
                        geometry: new Point({
                            x: feature.geometry.coordinates[0],
                            y: feature.geometry.coordinates[1]
                        }),
                        // select only the attributes you care about
                        attributes: {
                            ObjectID: i,
                            id: feature.id,
                            title: feature.title
                        }
                    };
                });

            }

            function createLayer(graphics) {
                var pRenderer = {
                    type: "simple",  // autocasts as new SimpleRenderer()
                    symbol: {
                        type: "simple-marker",  // autocasts as new SimpleMarkerSymbol()
                        size: 15,
                        color: "blue",
                        outline: {  // autocasts as new SimpleLineSymbol()
                            width: 0.5,
                            color: "blue"
                        }
                    }
                };

                var pFields = [
                    {
                        name: "ObjectID",
                        alias: "ObjectID",
                        type: "oid"
                    }, {
                        name: "id",
                        alias: "id",
                        type: "string"
                    }, {
                        name: "title",
                        alias: "title",
                        type: "string"
                    }
                ];

                // Set up popup template for the layer
                var pTemplate = {
                    title: "{title}",
                    content: [{
                        type: "fields",
                        fieldInfos: [
                            {
                                fieldName: "id",
                                label: "Point Id",
                                visible: true
                            },
                            {
                                fieldName: "title",
                                label: "Title",
                                visible: true
                            }
                        ]
                    }],
                    //fieldInfos: [{
                    //    fieldName: "time",
                    //    format: {
                    //        dateFormat: "short-date-short-time"
                    //    }
                    //}]
                };

                const labelClass = {
                    // autocasts as new LabelClass()
                    symbol: {
                        type: "text", // autocasts as new TextSymbol()
                        color: "green",
                        haloColor: "black",
                        font: {
                            // autocast as new Font()
                            family: "playfair-display",
                            size: 12,
                            weight: "bold"
                        }
                    },
                    labelPlacement: "center-center",
                    labelExpressionInfo: {
                        expression: "$feature.id"
                    }
                };

                var layer = new FeatureLayer({
                    source: graphics, // autocast as an array of esri/Graphic
                    // create an instance of esri/layers/support/Field for each field object
                    fields: pFields, // This is required when creating a layer from Graphics
                    objectIdField: "ObjectID", // This must be defined when creating a layer from Graphics
                    renderer: pRenderer, // set the visualization on the layer
                    spatialReference: {
                        wkid: 4326
                    },
                    geometryType: "point", // Must be set when creating a layer from Graphics
                    popupTemplate: pTemplate,
                    labelingInfo: [labelClass]
                });

                return layer;
            }

            function errback(error) {
                console.error("Creating legend failed. ", error);
            }
            //=====Add point feature layer END=====
        });
    </script>
</head>
<body>
    <div id="map-view-div"></div>
</body>
</html>