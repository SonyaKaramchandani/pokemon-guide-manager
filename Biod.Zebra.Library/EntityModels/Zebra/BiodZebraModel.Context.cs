//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Biod.Zebra.Library.EntityModels.Zebra
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BiodZebraEntities : DbContext
    {
        public BiodZebraEntities()
            : base("name=BiodZebraEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ArticleFeed> ArticleFeeds { get; set; }
        public virtual DbSet<Event> Events { get; set; }
        public virtual DbSet<EventCreationReason> EventCreationReasons { get; set; }
        public virtual DbSet<EventPriority> EventPriorities { get; set; }
        public virtual DbSet<HamType> HamTypes { get; set; }
        public virtual DbSet<ProcessedArticle> ProcessedArticles { get; set; }
        public virtual DbSet<Xtbl_Article_Location> Xtbl_Article_Location { get; set; }
        public virtual DbSet<Xtbl_Article_Location_Disease> Xtbl_Article_Location_Disease { get; set; }
        public virtual DbSet<Xtbl_Event_Location> Xtbl_Event_Location { get; set; }
        public virtual DbSet<Xtbl_RelatedArticles> Xtbl_RelatedArticles { get; set; }
        public virtual DbSet<EventGroupByField> EventGroupByFields { get; set; }
        public virtual DbSet<EventOrderByField> EventOrderByFields { get; set; }
        public virtual DbSet<OutbreakPotentialCategory> OutbreakPotentialCategories { get; set; }
        public virtual DbSet<UserGroup> UserGroups { get; set; }
        public virtual DbSet<UserEmailNotification> UserEmailNotifications { get; set; }
        public virtual DbSet<UserEmailType> UserEmailTypes { get; set; }
        public virtual DbSet<UserLoginTran> UserLoginTrans { get; set; }
        public virtual DbSet<UserRolesTransLog> UserRolesTransLogs { get; set; }
        public virtual DbSet<UserTransLog> UserTransLogs { get; set; }
        public virtual DbSet<UserExternalId> UserExternalIds { get; set; }
        public virtual DbSet<RelevanceType> RelevanceTypes { get; set; }
        public virtual DbSet<uvw_DiseaseRelevanceByRole> uvw_DiseaseRelevanceByRole { get; set; }
        public virtual DbSet<uvw_DiseaseRelevanceByUser> uvw_DiseaseRelevanceByUser { get; set; }
        public virtual DbSet<RelevanceState> RelevanceStates { get; set; }
        public virtual DbSet<Xtbl_Role_Disease_Relevance> Xtbl_Role_Disease_Relevance { get; set; }
        public virtual DbSet<Xtbl_User_Disease_Relevance> Xtbl_User_Disease_Relevance { get; set; }
        public virtual DbSet<CustomGroup> CustomGroups { get; set; }
        public virtual DbSet<Xtbl_Disease_CustomGroup> Xtbl_Disease_CustomGroup { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
    
        [DbFunction("BiodZebraEntities", "ufn_GetDiseasesFromFilterInfo")]
        public virtual IQueryable<ufn_GetDiseasesFromFilterInfo_Result> ufn_GetDiseasesFromFilterInfo(string diseasesIds, string transmissionModesIds, string interventionMethods, string severityRisks, string biosecurityRisks)
        {
            var diseasesIdsParameter = diseasesIds != null ?
                new ObjectParameter("DiseasesIds", diseasesIds) :
                new ObjectParameter("DiseasesIds", typeof(string));
    
            var transmissionModesIdsParameter = transmissionModesIds != null ?
                new ObjectParameter("TransmissionModesIds", transmissionModesIds) :
                new ObjectParameter("TransmissionModesIds", typeof(string));
    
            var interventionMethodsParameter = interventionMethods != null ?
                new ObjectParameter("InterventionMethods", interventionMethods) :
                new ObjectParameter("InterventionMethods", typeof(string));
    
            var severityRisksParameter = severityRisks != null ?
                new ObjectParameter("SeverityRisks", severityRisks) :
                new ObjectParameter("SeverityRisks", typeof(string));
    
            var biosecurityRisksParameter = biosecurityRisks != null ?
                new ObjectParameter("BiosecurityRisks", biosecurityRisks) :
                new ObjectParameter("BiosecurityRisks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_GetDiseasesFromFilterInfo_Result>("[BiodZebraEntities].[ufn_GetDiseasesFromFilterInfo](@DiseasesIds, @TransmissionModesIds, @InterventionMethods, @SeverityRisks, @BiosecurityRisks)", diseasesIdsParameter, transmissionModesIdsParameter, interventionMethodsParameter, severityRisksParameter, biosecurityRisksParameter);
        }
    
        public virtual ObjectResult<usp_HcwGetDiseaseByIncubation_Result> usp_HcwGetDiseaseByIncubation(string diseaseIds, Nullable<System.DateTime> userReturnDate, Nullable<int> lengthOfStay, Nullable<int> onsetOfSymptomsDays)
        {
            var diseaseIdsParameter = diseaseIds != null ?
                new ObjectParameter("DiseaseIds", diseaseIds) :
                new ObjectParameter("DiseaseIds", typeof(string));
    
            var userReturnDateParameter = userReturnDate.HasValue ?
                new ObjectParameter("UserReturnDate", userReturnDate) :
                new ObjectParameter("UserReturnDate", typeof(System.DateTime));
    
            var lengthOfStayParameter = lengthOfStay.HasValue ?
                new ObjectParameter("LengthOfStay", lengthOfStay) :
                new ObjectParameter("LengthOfStay", typeof(int));
    
            var onsetOfSymptomsDaysParameter = onsetOfSymptomsDays.HasValue ?
                new ObjectParameter("OnsetOfSymptomsDays", onsetOfSymptomsDays) :
                new ObjectParameter("OnsetOfSymptomsDays", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HcwGetDiseaseByIncubation_Result>("usp_HcwGetDiseaseByIncubation", diseaseIdsParameter, userReturnDateParameter, lengthOfStayParameter, onsetOfSymptomsDaysParameter);
        }
    
        public virtual ObjectResult<usp_HcwGetDiseaseDetailInfo_Result> usp_HcwGetDiseaseDetailInfo(Nullable<int> diseaseId)
        {
            var diseaseIdParameter = diseaseId.HasValue ?
                new ObjectParameter("DiseaseId", diseaseId) :
                new ObjectParameter("DiseaseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HcwGetDiseaseDetailInfo_Result>("usp_HcwGetDiseaseDetailInfo", diseaseIdParameter);
        }
    
        public virtual ObjectResult<usp_HcwGetDiseaseInfoByDiseaseId_Result> usp_HcwGetDiseaseInfoByDiseaseId(Nullable<int> diseaseId)
        {
            var diseaseIdParameter = diseaseId.HasValue ?
                new ObjectParameter("DiseaseId", diseaseId) :
                new ObjectParameter("DiseaseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HcwGetDiseaseInfoByDiseaseId_Result>("usp_HcwGetDiseaseInfoByDiseaseId", diseaseIdParameter);
        }
    
        public virtual int usp_HcwGetDiseasePathogen(string diseaseIds)
        {
            var diseaseIdsParameter = diseaseIds != null ?
                new ObjectParameter("DiseaseIds", diseaseIds) :
                new ObjectParameter("DiseaseIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HcwGetDiseasePathogen", diseaseIdsParameter);
        }
    
        public virtual ObjectResult<usp_HcwGetDiseaseSymptomScore_Result> usp_HcwGetDiseaseSymptomScore(string diseaseIds)
        {
            var diseaseIdsParameter = diseaseIds != null ?
                new ObjectParameter("DiseaseIds", diseaseIds) :
                new ObjectParameter("DiseaseIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HcwGetDiseaseSymptomScore_Result>("usp_HcwGetDiseaseSymptomScore", diseaseIdsParameter);
        }
    
        public virtual ObjectResult<usp_HcwGetDiseaseVaccineInfo_Result> usp_HcwGetDiseaseVaccineInfo(string diseaseIds)
        {
            var diseaseIdsParameter = diseaseIds != null ?
                new ObjectParameter("DiseaseIds", diseaseIds) :
                new ObjectParameter("DiseaseIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HcwGetDiseaseVaccineInfo_Result>("usp_HcwGetDiseaseVaccineInfo", diseaseIdsParameter);
        }
    
        public virtual ObjectResult<usp_GetGeonameCities_Result> usp_GetGeonameCities(string inputTerm)
        {
            var inputTermParameter = inputTerm != null ?
                new ObjectParameter("inputTerm", inputTerm) :
                new ObjectParameter("inputTerm", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetGeonameCities_Result>("usp_GetGeonameCities", inputTermParameter);
        }
    
        public virtual ObjectResult<usp_SearchGeonames_Result> usp_SearchGeonames(string inputTerm)
        {
            var inputTermParameter = inputTerm != null ?
                new ObjectParameter("inputTerm", inputTerm) :
                new ObjectParameter("inputTerm", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SearchGeonames_Result>("usp_SearchGeonames", inputTermParameter);
        }
    
        public virtual ObjectResult<string> usp_UpdateGeonames(string json)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("Json", json) :
                new ObjectParameter("Json", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_UpdateGeonames", jsonParameter);
        }
    
        public virtual ObjectResult<usp_HcwGetDiseaseSymptomScore1_Result> usp_HcwGetDiseaseSymptomScore1(string diseaseIds)
        {
            var diseaseIdsParameter = diseaseIds != null ?
                new ObjectParameter("DiseaseIds", diseaseIds) :
                new ObjectParameter("DiseaseIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HcwGetDiseaseSymptomScore1_Result>("usp_HcwGetDiseaseSymptomScore1", diseaseIdsParameter);
        }
    
        public virtual ObjectResult<usp_ZebraDashboardGetBiosecurityRisks_Result> usp_ZebraDashboardGetBiosecurityRisks()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraDashboardGetBiosecurityRisks_Result>("usp_ZebraDashboardGetBiosecurityRisks");
        }
    
        public virtual ObjectResult<usp_ZebraDashboardGetDiseases_Result> usp_ZebraDashboardGetDiseases()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraDashboardGetDiseases_Result>("usp_ZebraDashboardGetDiseases");
        }
    
        public virtual ObjectResult<usp_ZebraDashboardGetDiseaseSeveritys_Result> usp_ZebraDashboardGetDiseaseSeveritys()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraDashboardGetDiseaseSeveritys_Result>("usp_ZebraDashboardGetDiseaseSeveritys");
        }
    
        public virtual ObjectResult<usp_ZebraDashboardGetEventsGroupByFields_Result> usp_ZebraDashboardGetEventsGroupByFields()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraDashboardGetEventsGroupByFields_Result>("usp_ZebraDashboardGetEventsGroupByFields");
        }
    
        public virtual ObjectResult<usp_ZebraDashboardGetEventsOrderByFields_Result> usp_ZebraDashboardGetEventsOrderByFields()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraDashboardGetEventsOrderByFields_Result>("usp_ZebraDashboardGetEventsOrderByFields");
        }
    
        public virtual ObjectResult<usp_ZebraDashboardGetOutbreakPotentialCategories_Result> usp_ZebraDashboardGetOutbreakPotentialCategories()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraDashboardGetOutbreakPotentialCategories_Result>("usp_ZebraDashboardGetOutbreakPotentialCategories");
        }
    
        public virtual ObjectResult<usp_ZebraDashboardGetTransmissionModes_Result> usp_ZebraDashboardGetTransmissionModes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraDashboardGetTransmissionModes_Result>("usp_ZebraDashboardGetTransmissionModes");
        }
    
        public virtual int usp_SetZebraUserLoginTrans(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SetZebraUserLoginTrans", userIdParameter);
        }
    
        public virtual int usp_SetZebraUserEmailNotification(string userId, string aoiGeonameIds, string userEmail, Nullable<int> emailType, Nullable<int> eventId, string content, Nullable<System.DateTimeOffset> sentDate, string title, string summary)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            var aoiGeonameIdsParameter = aoiGeonameIds != null ?
                new ObjectParameter("AoiGeonameIds", aoiGeonameIds) :
                new ObjectParameter("AoiGeonameIds", typeof(string));
    
            var userEmailParameter = userEmail != null ?
                new ObjectParameter("userEmail", userEmail) :
                new ObjectParameter("userEmail", typeof(string));
    
            var emailTypeParameter = emailType.HasValue ?
                new ObjectParameter("emailType", emailType) :
                new ObjectParameter("emailType", typeof(int));
    
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("eventId", eventId) :
                new ObjectParameter("eventId", typeof(int));
    
            var contentParameter = content != null ?
                new ObjectParameter("content", content) :
                new ObjectParameter("content", typeof(string));
    
            var sentDateParameter = sentDate.HasValue ?
                new ObjectParameter("sentDate", sentDate) :
                new ObjectParameter("sentDate", typeof(System.DateTimeOffset));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var summaryParameter = summary != null ?
                new ObjectParameter("summary", summary) :
                new ObjectParameter("summary", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SetZebraUserEmailNotification", userIdParameter, aoiGeonameIdsParameter, userEmailParameter, emailTypeParameter, eventIdParameter, contentParameter, sentDateParameter, titleParameter, summaryParameter);
        }
    
        public virtual ObjectResult<usp_SearchGeonamesByGeonameIds_Result> usp_SearchGeonamesByGeonameIds(string geonameIds)
        {
            var geonameIdsParameter = geonameIds != null ?
                new ObjectParameter("GeonameIds", geonameIds) :
                new ObjectParameter("GeonameIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SearchGeonamesByGeonameIds_Result>("usp_SearchGeonamesByGeonameIds", geonameIdsParameter);
        }
    
        public virtual ObjectResult<usp_GetFirstLoginDateByUser_Result> usp_GetFirstLoginDateByUser(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetFirstLoginDateByUser_Result>("usp_GetFirstLoginDateByUser", userIdParameter);
        }
    
        public virtual int usp_SetZebraRequestInfo(string iPAddress, Nullable<bool> isPrivateIpAddress)
        {
            var iPAddressParameter = iPAddress != null ?
                new ObjectParameter("IPAddress", iPAddress) :
                new ObjectParameter("IPAddress", typeof(string));
    
            var isPrivateIpAddressParameter = isPrivateIpAddress.HasValue ?
                new ObjectParameter("IsPrivateIpAddress", isPrivateIpAddress) :
                new ObjectParameter("IsPrivateIpAddress", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SetZebraRequestInfo", iPAddressParameter, isPrivateIpAddressParameter);
        }
    
        public virtual ObjectResult<usp_ZebraAnalyticsGetUserEmailNotification_Result> usp_ZebraAnalyticsGetUserEmailNotification(string userId, string email, Nullable<int> emailType, Nullable<System.DateTimeOffset> startDate, Nullable<System.DateTimeOffset> endDate)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var emailTypeParameter = emailType.HasValue ?
                new ObjectParameter("emailType", emailType) :
                new ObjectParameter("emailType", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTimeOffset));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTimeOffset));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraAnalyticsGetUserEmailNotification_Result>("usp_ZebraAnalyticsGetUserEmailNotification", userIdParameter, emailParameter, emailTypeParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<usp_ZebraAnalyticsGetUserLastModifiedDate_Result> usp_ZebraAnalyticsGetUserLastModifiedDate(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraAnalyticsGetUserLastModifiedDate_Result>("usp_ZebraAnalyticsGetUserLastModifiedDate", userIdParameter);
        }
    
        public virtual ObjectResult<usp_ZebraAnalyticsGetUserLogin_Result> usp_ZebraAnalyticsGetUserLogin(string userId, Nullable<System.DateTimeOffset> startDate, Nullable<System.DateTimeOffset> endDate)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTimeOffset));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTimeOffset));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraAnalyticsGetUserLogin_Result>("usp_ZebraAnalyticsGetUserLogin", userIdParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<usp_ZebraEventGetEventDestinationAirport_Result> usp_ZebraEventGetEventDestinationAirport(Nullable<int> eventId)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraEventGetEventDestinationAirport_Result>("usp_ZebraEventGetEventDestinationAirport", eventIdParameter);
        }
    
        public virtual ObjectResult<usp_ZebraEventGetArticlesByEventId_Result> usp_ZebraEventGetArticlesByEventId(Nullable<int> eventId)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraEventGetArticlesByEventId_Result>("usp_ZebraEventGetArticlesByEventId", eventIdParameter);
        }
    
        public virtual ObjectResult<usp_ZebraEventGetDestinationAirportsByEventId_Result> usp_ZebraEventGetDestinationAirportsByEventId(Nullable<int> eventId, string geonameIds)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            var geonameIdsParameter = geonameIds != null ?
                new ObjectParameter("GeonameIds", geonameIds) :
                new ObjectParameter("GeonameIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraEventGetDestinationAirportsByEventId_Result>("usp_ZebraEventGetDestinationAirportsByEventId", eventIdParameter, geonameIdsParameter);
        }
    
        public virtual ObjectResult<usp_ZebraEmailGetEventAirportInfo_Result> usp_ZebraEmailGetEventAirportInfo(Nullable<int> eventId, string userId)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraEmailGetEventAirportInfo_Result>("usp_ZebraEmailGetEventAirportInfo", eventIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<usp_ZebraEventGetDiseaseByEventId_Result> usp_ZebraEventGetDiseaseByEventId(Nullable<int> eventId)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraEventGetDiseaseByEventId_Result>("usp_ZebraEventGetDiseaseByEventId", eventIdParameter);
        }
    
        public virtual ObjectResult<usp_ZebraAnalyticsGetEventByEventId_Result> usp_ZebraAnalyticsGetEventByEventId(Nullable<int> eventId)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraAnalyticsGetEventByEventId_Result>("usp_ZebraAnalyticsGetEventByEventId", eventIdParameter);
        }
    
        public virtual ObjectResult<usp_ZebraDataServicesGetEventDestinationGrid_Result> usp_ZebraDataServicesGetEventDestinationGrid(Nullable<int> eventId, string gridId)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            var gridIdParameter = gridId != null ?
                new ObjectParameter("GridId", gridId) :
                new ObjectParameter("GridId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraDataServicesGetEventDestinationGrid_Result>("usp_ZebraDataServicesGetEventDestinationGrid", eventIdParameter, gridIdParameter);
        }
    
        public virtual ObjectResult<usp_ZebraApiGetEventByGeonameId_Result> usp_ZebraApiGetEventByGeonameId(Nullable<int> geonameId, Nullable<int> distance)
        {
            var geonameIdParameter = geonameId.HasValue ?
                new ObjectParameter("GeonameId", geonameId) :
                new ObjectParameter("GeonameId", typeof(int));
    
            var distanceParameter = distance.HasValue ?
                new ObjectParameter("Distance", distance) :
                new ObjectParameter("Distance", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraApiGetEventByGeonameId_Result>("usp_ZebraApiGetEventByGeonameId", geonameIdParameter, distanceParameter);
        }
    
        public virtual ObjectResult<usp_ZebraApiGetEventsByGeonameId_Result> usp_ZebraApiGetEventsByGeonameId(Nullable<int> geonameId)
        {
            var geonameIdParameter = geonameId.HasValue ?
                new ObjectParameter("GeonameId", geonameId) :
                new ObjectParameter("GeonameId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraApiGetEventsByGeonameId_Result>("usp_ZebraApiGetEventsByGeonameId", geonameIdParameter);
        }
    
        public virtual ObjectResult<usp_ZebraApiGetEventLocationShapesByEventid_Result> usp_ZebraApiGetEventLocationShapesByEventid(Nullable<int> eventId)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraApiGetEventLocationShapesByEventid_Result>("usp_ZebraApiGetEventLocationShapesByEventid", eventIdParameter);
        }
    
        public virtual ObjectResult<usp_ZebraApiGetEvents_Result> usp_ZebraApiGetEvents()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraApiGetEvents_Result>("usp_ZebraApiGetEvents");
        }
    
        public virtual ObjectResult<usp_ZebraApiGetEventsByDiseaseId_Result> usp_ZebraApiGetEventsByDiseaseId(Nullable<int> diseaseId)
        {
            var diseaseIdParameter = diseaseId.HasValue ?
                new ObjectParameter("DiseaseId", diseaseId) :
                new ObjectParameter("DiseaseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraApiGetEventsByDiseaseId_Result>("usp_ZebraApiGetEventsByDiseaseId", diseaseIdParameter);
        }
    
        public virtual ObjectResult<usp_ZebraEventGetEventSummary_Result> usp_ZebraEventGetEventSummary(string userId, string geonameIds, string diseasesIds, string transmissionModesIds, string interventionMethods, string severityRisks, string biosecurityRisks, Nullable<bool> locationOnly)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var geonameIdsParameter = geonameIds != null ?
                new ObjectParameter("GeonameIds", geonameIds) :
                new ObjectParameter("GeonameIds", typeof(string));
    
            var diseasesIdsParameter = diseasesIds != null ?
                new ObjectParameter("DiseasesIds", diseasesIds) :
                new ObjectParameter("DiseasesIds", typeof(string));
    
            var transmissionModesIdsParameter = transmissionModesIds != null ?
                new ObjectParameter("TransmissionModesIds", transmissionModesIds) :
                new ObjectParameter("TransmissionModesIds", typeof(string));
    
            var interventionMethodsParameter = interventionMethods != null ?
                new ObjectParameter("InterventionMethods", interventionMethods) :
                new ObjectParameter("InterventionMethods", typeof(string));
    
            var severityRisksParameter = severityRisks != null ?
                new ObjectParameter("SeverityRisks", severityRisks) :
                new ObjectParameter("SeverityRisks", typeof(string));
    
            var biosecurityRisksParameter = biosecurityRisks != null ?
                new ObjectParameter("BiosecurityRisks", biosecurityRisks) :
                new ObjectParameter("BiosecurityRisks", typeof(string));
    
            var locationOnlyParameter = locationOnly.HasValue ?
                new ObjectParameter("LocationOnly", locationOnly) :
                new ObjectParameter("LocationOnly", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraEventGetEventSummary_Result>("usp_ZebraEventGetEventSummary", userIdParameter, geonameIdsParameter, diseasesIdsParameter, transmissionModesIdsParameter, interventionMethodsParameter, severityRisksParameter, biosecurityRisksParameter, locationOnlyParameter);
        }
    
        public virtual ObjectResult<usp_ZebraDashboardGetEventsMap_Result> usp_ZebraDashboardGetEventsMap()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraDashboardGetEventsMap_Result>("usp_ZebraDashboardGetEventsMap");
        }
    
        public virtual ObjectResult<usp_ZebraEventGetSourceAirportsByEventId_Result> usp_ZebraEventGetSourceAirportsByEventId(Nullable<int> eventId)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraEventGetSourceAirportsByEventId_Result>("usp_ZebraEventGetSourceAirportsByEventId", eventIdParameter);
        }
    
        public virtual ObjectResult<string> usp_ZebraPlaceGetGridIdByGeonameId(Nullable<int> geonameId)
        {
            var geonameIdParameter = geonameId.HasValue ?
                new ObjectParameter("GeonameId", geonameId) :
                new ObjectParameter("GeonameId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_ZebraPlaceGetGridIdByGeonameId", geonameIdParameter);
        }
    
        public virtual ObjectResult<usp_ZebraEventGetImportationRisk_Result> usp_ZebraEventGetImportationRisk(Nullable<int> eventId, string geonameIds)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            var geonameIdsParameter = geonameIds != null ?
                new ObjectParameter("GeonameIds", geonameIds) :
                new ObjectParameter("GeonameIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraEventGetImportationRisk_Result>("usp_ZebraEventGetImportationRisk", eventIdParameter, geonameIdsParameter);
        }
    
        public virtual ObjectResult<string> usp_ZebraPlaceGetLocationNameByGeonameId(Nullable<int> geonameId)
        {
            var geonameIdParameter = geonameId.HasValue ?
                new ObjectParameter("GeonameId", geonameId) :
                new ObjectParameter("GeonameId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_ZebraPlaceGetLocationNameByGeonameId", geonameIdParameter);
        }
    
        public virtual ObjectResult<usp_ZebraPlaceGetLocationShapeByGeonameId_Result> usp_ZebraPlaceGetLocationShapeByGeonameId(string aoiGeonameIds)
        {
            var aoiGeonameIdsParameter = aoiGeonameIds != null ?
                new ObjectParameter("AoiGeonameIds", aoiGeonameIds) :
                new ObjectParameter("AoiGeonameIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraPlaceGetLocationShapeByGeonameId_Result>("usp_ZebraPlaceGetLocationShapeByGeonameId", aoiGeonameIdsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_ZebraDataRenderSetImportationRiskByEventId(Nullable<int> eventId)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_ZebraDataRenderSetImportationRiskByEventId", eventIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_ZebraDataRenderSetImportationRiskByUserId(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_ZebraDataRenderSetImportationRiskByUserId", userIdParameter);
        }
    
        public virtual ObjectResult<usp_ZebraDataRenderSetSourceDestinationsPart1_Result> usp_ZebraDataRenderSetSourceDestinationsPart1(Nullable<int> eventId)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraDataRenderSetSourceDestinationsPart1_Result>("usp_ZebraDataRenderSetSourceDestinationsPart1", eventIdParameter);
        }
    
        public virtual ObjectResult<usp_ZebraDataRenderSetSourceDestinationsPart2_Result> usp_ZebraDataRenderSetSourceDestinationsPart2(Nullable<int> eventId, string eventGridCases)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            var eventGridCasesParameter = eventGridCases != null ?
                new ObjectParameter("EventGridCases", eventGridCases) :
                new ObjectParameter("EventGridCases", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraDataRenderSetSourceDestinationsPart2_Result>("usp_ZebraDataRenderSetSourceDestinationsPart2", eventIdParameter, eventGridCasesParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_ZebraDataRenderSetSourceDestinationsPart3(Nullable<int> eventId, Nullable<double> minPrevelance, Nullable<double> maxPrevelance)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            var minPrevelanceParameter = minPrevelance.HasValue ?
                new ObjectParameter("MinPrevelance", minPrevelance) :
                new ObjectParameter("MinPrevelance", typeof(double));
    
            var maxPrevelanceParameter = maxPrevelance.HasValue ?
                new ObjectParameter("MaxPrevelance", maxPrevelance) :
                new ObjectParameter("MaxPrevelance", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_ZebraDataRenderSetSourceDestinationsPart3", eventIdParameter, minPrevelanceParameter, maxPrevelanceParameter);
        }
    
        public virtual ObjectResult<usp_ZebraEventSetEventCase_Result> usp_ZebraEventSetEventCase(Nullable<int> eventId)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraEventSetEventCase_Result>("usp_ZebraEventSetEventCase", eventIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_ZebraEmailSetWeeklyData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_ZebraEmailSetWeeklyData");
        }
    
        public virtual ObjectResult<string> usp_ZebraPlaceGetCountryShapeByGeonameId(Nullable<int> geonameId)
        {
            var geonameIdParameter = geonameId.HasValue ?
                new ObjectParameter("GeonameId", geonameId) :
                new ObjectParameter("GeonameId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_ZebraPlaceGetCountryShapeByGeonameId", geonameIdParameter);
        }
    
        public virtual ObjectResult<string> usp_ZebraEventGetDiseaseNameByEventId(Nullable<int> eventId)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_ZebraEventGetDiseaseNameByEventId", eventIdParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> usp_ZebraEmailGetIsEmailSent(Nullable<int> eventId, Nullable<int> emailType, string email, string aoiGeonameIds)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            var emailTypeParameter = emailType.HasValue ?
                new ObjectParameter("EmailType", emailType) :
                new ObjectParameter("EmailType", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var aoiGeonameIdsParameter = aoiGeonameIds != null ?
                new ObjectParameter("AoiGeonameIds", aoiGeonameIds) :
                new ObjectParameter("AoiGeonameIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("usp_ZebraEmailGetIsEmailSent", eventIdParameter, emailTypeParameter, emailParameter, aoiGeonameIdsParameter);
        }
    
        public virtual ObjectResult<usp_ZebraEmailGetProximalEmailData_Result> usp_ZebraEmailGetProximalEmailData(Nullable<int> eventId)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraEmailGetProximalEmailData_Result>("usp_ZebraEmailGetProximalEmailData", eventIdParameter);
        }
    
        public virtual ObjectResult<usp_ZebraDiseaseGetDiseasesByGroupType_Result> usp_ZebraDiseaseGetDiseasesByGroupType(Nullable<int> groupType)
        {
            var groupTypeParameter = groupType.HasValue ?
                new ObjectParameter("GroupType", groupType) :
                new ObjectParameter("GroupType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraDiseaseGetDiseasesByGroupType_Result>("usp_ZebraDiseaseGetDiseasesByGroupType", groupTypeParameter);
        }
    
        public virtual ObjectResult<usp_ZebraEmailGetEventByEventId_Result> usp_ZebraEmailGetEventByEventId(Nullable<int> eventId, Nullable<int> distance)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            var distanceParameter = distance.HasValue ?
                new ObjectParameter("Distance", distance) :
                new ObjectParameter("Distance", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraEmailGetEventByEventId_Result>("usp_ZebraEmailGetEventByEventId", eventIdParameter, distanceParameter);
        }
    
        public virtual ObjectResult<usp_ZebraEmailGetWeeklyEmailData_Result> usp_ZebraEmailGetWeeklyEmailData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraEmailGetWeeklyEmailData_Result>("usp_ZebraEmailGetWeeklyEmailData");
        }
    
        public virtual ObjectResult<usp_ZebraEventGetEventSummary_Result> usp_ZebraEventGetCustomEventSummary(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraEventGetEventSummary_Result>("usp_ZebraEventGetCustomEventSummary", userIdParameter);
        }
    
        public virtual ObjectResult<usp_ZebraDashboardGetInterventionMethods_Result> usp_ZebraDashboardGetInterventionMethods()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraDashboardGetInterventionMethods_Result>("usp_ZebraDashboardGetInterventionMethods");
        }
    
        public virtual ObjectResult<usp_ZebraDataRenderSetSourceDestinationsPart1ByDisease_Result> usp_ZebraDataRenderSetSourceDestinationsPart1ByDisease(Nullable<int> diseaseId)
        {
            var diseaseIdParameter = diseaseId.HasValue ?
                new ObjectParameter("DiseaseId", diseaseId) :
                new ObjectParameter("DiseaseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraDataRenderSetSourceDestinationsPart1ByDisease_Result>("usp_ZebraDataRenderSetSourceDestinationsPart1ByDisease", diseaseIdParameter);
        }
    
        public virtual ObjectResult<usp_ZebraDataRenderSetSourceDestinationsPart2ByDisease_Result> usp_ZebraDataRenderSetSourceDestinationsPart2ByDisease(Nullable<int> diseaseId, string eventsGridCases)
        {
            var diseaseIdParameter = diseaseId.HasValue ?
                new ObjectParameter("DiseaseId", diseaseId) :
                new ObjectParameter("DiseaseId", typeof(int));
    
            var eventsGridCasesParameter = eventsGridCases != null ?
                new ObjectParameter("EventsGridCases", eventsGridCases) :
                new ObjectParameter("EventsGridCases", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraDataRenderSetSourceDestinationsPart2ByDisease_Result>("usp_ZebraDataRenderSetSourceDestinationsPart2ByDisease", diseaseIdParameter, eventsGridCasesParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_ZebraDataRenderSetSourceDestinationsPart3ByDisease(Nullable<int> diseaseId, Nullable<double> minPrevelance, Nullable<double> maxPrevelance)
        {
            var diseaseIdParameter = diseaseId.HasValue ?
                new ObjectParameter("DiseaseId", diseaseId) :
                new ObjectParameter("DiseaseId", typeof(int));
    
            var minPrevelanceParameter = minPrevelance.HasValue ?
                new ObjectParameter("MinPrevelance", minPrevelance) :
                new ObjectParameter("MinPrevelance", typeof(double));
    
            var maxPrevelanceParameter = maxPrevelance.HasValue ?
                new ObjectParameter("MaxPrevelance", maxPrevelance) :
                new ObjectParameter("MaxPrevelance", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_ZebraDataRenderSetSourceDestinationsPart3ByDisease", diseaseIdParameter, minPrevelanceParameter, maxPrevelanceParameter);
        }
    
        public virtual ObjectResult<usp_ZebraDiseaseGetImportationRisk_Result> usp_ZebraDiseaseGetImportationRisk(Nullable<int> diseaseId, string geonameIds)
        {
            var diseaseIdParameter = diseaseId.HasValue ?
                new ObjectParameter("DiseaseId", diseaseId) :
                new ObjectParameter("DiseaseId", typeof(int));
    
            var geonameIdsParameter = geonameIds != null ?
                new ObjectParameter("GeonameIds", geonameIds) :
                new ObjectParameter("GeonameIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraDiseaseGetImportationRisk_Result>("usp_ZebraDiseaseGetImportationRisk", diseaseIdParameter, geonameIdsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_ZebraDiseaseGetLocalCaseCount(Nullable<int> diseaseId, string geonameIds)
        {
            var diseaseIdParameter = diseaseId.HasValue ?
                new ObjectParameter("DiseaseId", diseaseId) :
                new ObjectParameter("DiseaseId", typeof(int));
    
            var geonameIdsParameter = geonameIds != null ?
                new ObjectParameter("GeonameIds", geonameIds) :
                new ObjectParameter("GeonameIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_ZebraDiseaseGetLocalCaseCount", diseaseIdParameter, geonameIdsParameter);
        }
    
        public virtual int usp_InsertActiveGeonamesByGeonameIds(string geonameIds)
        {
            var geonameIdsParameter = geonameIds != null ?
                new ObjectParameter("GeonameIds", geonameIds) :
                new ObjectParameter("GeonameIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertActiveGeonamesByGeonameIds", geonameIdsParameter);
        }
    
        public virtual ObjectResult<usp_ZebraEventGetEventSummary_Result> usp_ZebraEventGetCustomEventSummaryByEventId(string userId, string geonameIds, Nullable<int> eventId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var geonameIdsParameter = geonameIds != null ?
                new ObjectParameter("GeonameIds", geonameIds) :
                new ObjectParameter("GeonameIds", typeof(string));
    
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraEventGetEventSummary_Result>("usp_ZebraEventGetCustomEventSummaryByEventId", userIdParameter, geonameIdsParameter, eventIdParameter);
        }
    
        public virtual ObjectResult<usp_ZebraEventGetEventSummary_Result> usp_ZebraEventGetEventSummaryByEventId(string userId, string geonameIds, Nullable<int> eventId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var geonameIdsParameter = geonameIds != null ?
                new ObjectParameter("GeonameIds", geonameIds) :
                new ObjectParameter("GeonameIds", typeof(string));
    
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraEventGetEventSummary_Result>("usp_ZebraEventGetEventSummaryByEventId", userIdParameter, geonameIdsParameter, eventIdParameter);
        }
    
        public virtual ObjectResult<usp_ZebraEventGetCaseCountByEventId_Result> usp_ZebraEventGetCaseCountByEventId(Nullable<int> eventId)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ZebraEventGetCaseCountByEventId_Result>("usp_ZebraEventGetCaseCountByEventId", eventIdParameter);
        }
    
        public virtual ObjectResult<string> usp_UpdateDiseaseApi_main(string json_1, string json_2, string json_3, string json_4)
        {
            var json_1Parameter = json_1 != null ?
                new ObjectParameter("Json_1", json_1) :
                new ObjectParameter("Json_1", typeof(string));
    
            var json_2Parameter = json_2 != null ?
                new ObjectParameter("Json_2", json_2) :
                new ObjectParameter("Json_2", typeof(string));
    
            var json_3Parameter = json_3 != null ?
                new ObjectParameter("Json_3", json_3) :
                new ObjectParameter("Json_3", typeof(string));
    
            var json_4Parameter = json_4 != null ?
                new ObjectParameter("Json_4", json_4) :
                new ObjectParameter("Json_4", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_UpdateDiseaseApi_main", json_1Parameter, json_2Parameter, json_3Parameter, json_4Parameter);
        }
    }
}
