//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Biod.Zebra.Library.EntityModels.Surveillance
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BiodSurveillanceDataEntities : DbContext
    {
        public BiodSurveillanceDataEntities()
            : base("name=BiodSurveillanceDataEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<SurveillanceArticleFeed> SurveillanceArticleFeeds { get; set; }
        public virtual DbSet<SurveillanceEventCreationReason> SurveillanceEventCreationReasons { get; set; }
        public virtual DbSet<SurveillanceEventPriority> SurveillanceEventPriorities { get; set; }
        public virtual DbSet<SurveillanceHamType> SurveillanceHamTypes { get; set; }
        public virtual DbSet<SurveillanceXtbl_Article_Location_Disease> SurveillanceXtbl_Article_Location_Disease { get; set; }
        public virtual DbSet<SurveillanceXtbl_Event_Location> SurveillanceXtbl_Event_Location { get; set; }
        public virtual DbSet<SurveillanceXtbl_RelatedArticles> SurveillanceXtbl_RelatedArticles { get; set; }
        public virtual DbSet<uvw_GeonamesSubset> uvw_GeonamesSubset { get; set; }
        public virtual DbSet<GeonameAlternatenameEng> GeonameAlternatenameEngs { get; set; }
        public virtual DbSet<SurveillanceGeoname> SurveillanceGeonames { get; set; }
        public virtual DbSet<SurveillanceProcessedArticle> SurveillanceProcessedArticles { get; set; }
        public virtual DbSet<SurveillanceEvent> SurveillanceEvents { get; set; }
        public virtual DbSet<SuggestedEvent> SuggestedEvents { get; set; }
        public virtual DbSet<Xtbl_SuggestedEvent_Reason> Xtbl_SuggestedEvent_Reason { get; set; }
        public virtual DbSet<ArticleGDELTLanguageLookup> ArticleGDELTLanguageLookups { get; set; }
        public virtual DbSet<Disease> Diseases { get; set; }
        public virtual DbSet<Species> Species { get; set; }
        public virtual DbSet<AutoSurveillanceConfig> AutoSurveillanceConfigs { get; set; }
    
        public virtual ObjectResult<usp_SurveillanceSearchGeonames_Result> usp_SearchGeonames(string inputTerm)
        {
            var inputTermParameter = inputTerm != null ?
                new ObjectParameter("inputTerm", inputTerm) :
                new ObjectParameter("inputTerm", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SurveillanceSearchGeonames_Result>("usp_SearchGeonames", inputTermParameter);
        }
    
        public virtual ObjectResult<usp_GetChildArticleList_Result> usp_GetChildArticleList(string articleType, string articleId, Nullable<decimal> similarClusterId)
        {
            var articleTypeParameter = articleType != null ?
                new ObjectParameter("ArticleType", articleType) :
                new ObjectParameter("ArticleType", typeof(string));
    
            var articleIdParameter = articleId != null ?
                new ObjectParameter("ArticleId", articleId) :
                new ObjectParameter("ArticleId", typeof(string));
    
            var similarClusterIdParameter = similarClusterId.HasValue ?
                new ObjectParameter("SimilarClusterId", similarClusterId) :
                new ObjectParameter("SimilarClusterId", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetChildArticleList_Result>("usp_GetChildArticleList", articleTypeParameter, articleIdParameter, similarClusterIdParameter);
        }
    
        public virtual ObjectResult<usp_GetParentArticleListByFilters_Result> usp_GetParentArticleListByFilters(string articleType, Nullable<int> pageStart, Nullable<int> pageLength, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string hamTypeId, string articleSourceFeedIds, string diseaseIds, string locationIds, string searchString)
        {
            var articleTypeParameter = articleType != null ?
                new ObjectParameter("ArticleType", articleType) :
                new ObjectParameter("ArticleType", typeof(string));
    
            var pageStartParameter = pageStart.HasValue ?
                new ObjectParameter("PageStart", pageStart) :
                new ObjectParameter("PageStart", typeof(int));
    
            var pageLengthParameter = pageLength.HasValue ?
                new ObjectParameter("PageLength", pageLength) :
                new ObjectParameter("PageLength", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var hamTypeIdParameter = hamTypeId != null ?
                new ObjectParameter("HamTypeId", hamTypeId) :
                new ObjectParameter("HamTypeId", typeof(string));
    
            var articleSourceFeedIdsParameter = articleSourceFeedIds != null ?
                new ObjectParameter("ArticleSourceFeedIds", articleSourceFeedIds) :
                new ObjectParameter("ArticleSourceFeedIds", typeof(string));
    
            var diseaseIdsParameter = diseaseIds != null ?
                new ObjectParameter("DiseaseIds", diseaseIds) :
                new ObjectParameter("DiseaseIds", typeof(string));
    
            var locationIdsParameter = locationIds != null ?
                new ObjectParameter("LocationIds", locationIds) :
                new ObjectParameter("LocationIds", typeof(string));
    
            var searchStringParameter = searchString != null ?
                new ObjectParameter("SearchString", searchString) :
                new ObjectParameter("SearchString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetParentArticleListByFilters_Result>("usp_GetParentArticleListByFilters", articleTypeParameter, pageStartParameter, pageLengthParameter, startDateParameter, endDateParameter, hamTypeIdParameter, articleSourceFeedIdsParameter, diseaseIdsParameter, locationIdsParameter, searchStringParameter);
        }
    
        public virtual ObjectResult<usp_GetParentArticleList_Result> usp_GetParentArticleList(string articleType, Nullable<int> pageStart, Nullable<int> pageLength, string searchString)
        {
            var articleTypeParameter = articleType != null ?
                new ObjectParameter("ArticleType", articleType) :
                new ObjectParameter("ArticleType", typeof(string));
    
            var pageStartParameter = pageStart.HasValue ?
                new ObjectParameter("PageStart", pageStart) :
                new ObjectParameter("PageStart", typeof(int));
    
            var pageLengthParameter = pageLength.HasValue ?
                new ObjectParameter("PageLength", pageLength) :
                new ObjectParameter("PageLength", typeof(int));
    
            var searchStringParameter = searchString != null ?
                new ObjectParameter("SearchString", searchString) :
                new ObjectParameter("SearchString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetParentArticleList_Result>("usp_GetParentArticleList", articleTypeParameter, pageStartParameter, pageLengthParameter, searchStringParameter);
        }
    
        public virtual ObjectResult<usp_GetArticleCounts_Result> usp_GetArticleCounts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetArticleCounts_Result>("usp_GetArticleCounts");
        }
    
        public virtual ObjectResult<Nullable<int>> usp_GetTotalArticleRecords(string articleType, string searchString)
        {
            var articleTypeParameter = articleType != null ?
                new ObjectParameter("ArticleType", articleType) :
                new ObjectParameter("ArticleType", typeof(string));
    
            var searchStringParameter = searchString != null ?
                new ObjectParameter("SearchString", searchString) :
                new ObjectParameter("SearchString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_GetTotalArticleRecords", articleTypeParameter, searchStringParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_GetTotalArticleRecordsByFilters(string articleType, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string hamTypeId, string articleSourceFeedIds, string diseaseIds, string locationIds, string searchString)
        {
            var articleTypeParameter = articleType != null ?
                new ObjectParameter("ArticleType", articleType) :
                new ObjectParameter("ArticleType", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var hamTypeIdParameter = hamTypeId != null ?
                new ObjectParameter("HamTypeId", hamTypeId) :
                new ObjectParameter("HamTypeId", typeof(string));
    
            var articleSourceFeedIdsParameter = articleSourceFeedIds != null ?
                new ObjectParameter("ArticleSourceFeedIds", articleSourceFeedIds) :
                new ObjectParameter("ArticleSourceFeedIds", typeof(string));
    
            var diseaseIdsParameter = diseaseIds != null ?
                new ObjectParameter("DiseaseIds", diseaseIds) :
                new ObjectParameter("DiseaseIds", typeof(string));
    
            var locationIdsParameter = locationIds != null ?
                new ObjectParameter("LocationIds", locationIds) :
                new ObjectParameter("LocationIds", typeof(string));
    
            var searchStringParameter = searchString != null ?
                new ObjectParameter("SearchString", searchString) :
                new ObjectParameter("SearchString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_GetTotalArticleRecordsByFilters", articleTypeParameter, startDateParameter, endDateParameter, hamTypeIdParameter, articleSourceFeedIdsParameter, diseaseIdsParameter, locationIdsParameter, searchStringParameter);
        }
    
        public virtual ObjectResult<string> usp_UpdateDiseaseApi_main(string json_1, string json_2, string json_3, string json_4)
        {
            var json_1Parameter = json_1 != null ?
                new ObjectParameter("Json_1", json_1) :
                new ObjectParameter("Json_1", typeof(string));
    
            var json_2Parameter = json_2 != null ?
                new ObjectParameter("Json_2", json_2) :
                new ObjectParameter("Json_2", typeof(string));
    
            var json_3Parameter = json_3 != null ?
                new ObjectParameter("Json_3", json_3) :
                new ObjectParameter("Json_3", typeof(string));
    
            var json_4Parameter = json_4 != null ?
                new ObjectParameter("Json_4", json_4) :
                new ObjectParameter("Json_4", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_UpdateDiseaseApi_main", json_1Parameter, json_2Parameter, json_3Parameter, json_4Parameter);
        }
    
        public virtual ObjectResult<string> usp_UpdateSurveillanceApi_main(string serviceDomainName)
        {
            var serviceDomainNameParameter = serviceDomainName != null ?
                new ObjectParameter("serviceDomainName", serviceDomainName) :
                new ObjectParameter("serviceDomainName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_UpdateSurveillanceApi_main", serviceDomainNameParameter);
        }
    }
}
