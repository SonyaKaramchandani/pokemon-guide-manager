//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Biod.Zebra.Library.EntityModels.ClientHealthmap
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ClientHealthmapEntities : DbContext
    {
        public ClientHealthmapEntities()
            : base("name=ClientHealthmapEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<healthmap_AlertArticles> healthmap_AlertArticles { get; set; }
        public virtual DbSet<healthmap_AlertArticlesContent> healthmap_AlertArticlesContent { get; set; }
        public virtual DbSet<healthmap_AlertLocationType> healthmap_AlertLocationType { get; set; }
        public virtual DbSet<healthmap_AlertSourceType> healthmap_AlertSourceType { get; set; }
        public virtual DbSet<healthmap_Disease> healthmap_Disease { get; set; }
    
        public virtual ObjectResult<healthmap_getDiseaseAlertArticles_sp_Result> healthmap_getDiseaseAlertArticles_sp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<healthmap_getDiseaseAlertArticles_sp_Result>("healthmap_getDiseaseAlertArticles_sp");
        }
    
        public virtual int healthmap_insertDiseaseAlertArticles_sp(Nullable<int> diseaseId, string articleId)
        {
            var diseaseIdParameter = diseaseId.HasValue ?
                new ObjectParameter("DiseaseId", diseaseId) :
                new ObjectParameter("DiseaseId", typeof(int));
    
            var articleIdParameter = articleId != null ?
                new ObjectParameter("ArticleId", articleId) :
                new ObjectParameter("ArticleId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("healthmap_insertDiseaseAlertArticles_sp", diseaseIdParameter, articleIdParameter);
        }
    }
}
